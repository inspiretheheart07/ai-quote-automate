name: Python CI

on:
  push:
    branches:
      - development

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run script
      env:
        GOOGLE_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_CREDENTIALS }}
        GOOGLE_YT_API_KEY: ${{ secrets.GOOGLE_YT_API_KEY }}
      run: |
        python main.py

    - name: Upload downloaded files as artifact
      uses: actions/upload-artifact@v4
      with:
        name: downloaded-files
        path: |
            output_video.mp4
    - name: Format and save client_secrets.json
      run: |
        python -c "
        import json
        import os
        
        # Load the client secrets from the GitHub secret (stored in JSON_OAUTH)
        client_secrets = os.getenv('JSON_OAUTH')
        
        # Parse the secret into a JSON object
        client_secrets_dict = json.loads(client_secrets)
        
        # Re-encode the JSON object with double quotes
        with open('client_secrets.json', 'w') as f:
            json.dump(client_secrets_dict, f, indent=2)
        
        print('client_secrets.json successfully written')

    - name: Authenticate with Google and get Access Token
      id: oauth
      run: |
        python - <<EOF
        import os
        import google_auth_oauthlib.flow
        from google.oauth2.credentials import Credentials
        from google.auth.transport.requests import Request
        
        # Load the client secrets from GitHub secrets
        client_id = os.getenv('CLIENT_ID')
        client_secret =  './client_secrets.json'
        
        
        # Create the OAuth flow
        flow = google_auth_oauthlib.flow.InstalledAppFlow.from_client_secrets_file(client_secret, ['https://www.googleapis.com/auth/youtube.upload'])
        
        # Run local server and obtain credentials
        credentials = flow.run_local_server(port=0)
        
        # Save the credentials for future use (could store in a secret if needed)
        access_token = credentials.token
        print(f"::set-output name=access_token::{access_token}")
        EOF

    - name: Set Access Token as Environment Variable
      run: echo "ACCESS_TOKEN=${{ steps.oauth.outputs.access_token }}" >> $GITHUB_ENV

    - name: Upload video to YouTube
      run: |
        curl -X POST \
          -H "Authorization: Bearer $ACCESS_TOKEN" \
          -F "snippet={\"title\": \"Your Video Title\", \"description\": \"Your video description\", \"tags\": [\"tag1\", \"tag2\"]}" \
          -F "status={\"privacyStatus\": \"public\"}" \
          -F "media=output_video.mp4" \
          "https://www.googleapis.com/upload/youtube/v3/videos?uploadType=multipart&part=snippet,status"

