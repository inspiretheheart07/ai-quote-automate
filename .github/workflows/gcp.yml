name: Run Python Script

on:
  pull_request:
    branches:
      - main

jobs:
  generate_text:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write  # Important: Required for Workload Identity Federation

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate with Google Cloud (Workload Identity Federation)
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: 'projects/${{secrets.GCP_PROJECT_ID}}/locations/global/workloadIdentityPools/${{secrets.GCP_WORKLOAD_IDENTITY_POOL}}/providers/${{secrets.GCP_WORKLOAD_IDENTITY_PROVIDER}}'
          service_account: ${{secrets.SERVICE_ACCOUNT_EMAIL}}
          create_credentials_file: false  # No need for credentials file if you use Workload Identity Federation

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'  # Or your preferred version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade google-generativeai

      - name: Run generative AI script
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        # run: |
        #   python generate_quote.py

      - name: Pass Quote to Next Python Script
        run: |
            # Read the quote from the generated file
            quote=$(cat quote.txt)
            echo "Quote generated: $quote"
            
            # Set the quote as an environment variable for the next step
            echo "QUOTE=$quote" >> $GITHUB_ENV
      - name: Install Python dependencies 02
        run: |
            pip install --upgrade pip
            pip install Pillow
            pip install numpy
            pip install moviepy
            pip install google-api-python-client  
            pip install google-auth-httplib2
            pip install google-auth-oauthlib
            pip list  
      - name: Debug Authentication Output
        run: |
          echo "Access Token:"
          gcloud auth print-access-token

      - name: Create Image Using Bg
        run: |
          python create_image_video.py 